stand01_mySQL.txt




	+Tabelle für Szenen    Hintergrundbilder, welche die Szenen darstellen
		
		id SMALLINT (PRIMARY, UNIQUE)
		name VARCHAR (UNIQUE)
		bildlink TEXT
		
	+Tabelle für Objekte   	Interaktive Objekte (z.b Gras)
	
		id SMALLINT (PRIMARY, UNIQUE)
		name VARCHAR (UNIQUE)
		bildlink TEXT
		eventid SMALLINT
		
	+Tabelle für Events     Befehle die bei Objektaktivierung ausgeführt werden sollen(z.b. zum Gras laufen, Gras essen, 					Gras löschen, Gras2(z.b. kurzes gras?) einfügen)
	
		id SMALLINT (PIRMARY, UNIQUE)
		name (UNIQUE)
		code MEDIUMTEXT
	
	
	// noch auszuknobeln: wo steckt die information welche objekte in sceneX und an welcher position sind? objekttabelle 		   (mit objektID, position x und position y, etc)in der Szenentabelle? 
	   oder spalten in der scenentabelle mit einer objektid? bzw 2 oder 3 (limitiert man sich damit in der 	zukunft?)
	   vieleicht findet man eine elegante lösung! //
	
	
		
	+Tabelle für Kuh? 
	
		für prototyp irrelevant -  später verschiedene Kühe? Individualisierungsparameter? not?
	
	
	+Tabelle für Logindaten?	
	   	
	   	für den prototypen irrelevant. bei bedarf in einer späteren version oder als arbeitsbeschaffungsmaßnahme?
	   	id SMALLINT (PRIMARY, UNIQUE)
	   	name VARCHAR
	   	email VARCHAR
	   	passwort VARCHAR
	
=== Feedback Alpers, nov 27 ===

Liebe/r Studierende/r,

die Ideen zur Login-Tabelle sind gut. Prüfen Sie jetzt noch, welche anderen Daten eine für eine gewisse Zeitspanne gespeichert werden sollen und stellen Sie dafür entsprechende Listen auf.

Bei den übrigen Tabellen achten Sie bitte darauf, dass eine MySQL-DB nur einzelne Werte speichern kann. Die Nutzung einer DB macht dabei nur dann Sinn, wenn die Werte dauerhaft gespeichert werden sollen und für einzelne Nutzer u.a. individuell gespeichert werden sollen. Wenn dagegen im Spiel Events auftauchen, dann sollte in der Programmlogik (also in PHP bzw. JavaScript) gespeichert werden, wie die ablaufen.

Anders würde das aussehen, wenn Sie tatsächlich komplette Spielstände mit Positionsdaten in der DB speichern wollen.

Das bringt mich zum einzigen Kritikpunkt in der Dokumentation: Momentan wird aus Ihrem Teil zur Dokumentation nicht klar, warum welche Daten gespeichert werden sollen. Das mag teilweise ungewohnt sein, ist aber wichtig, damit Sie zu einem späteren Zeitpunkt prüfen können, ob bzw. wo Sie Ihr Projekt ändern wollen.

Bezüglich der Implementierung: Bislang haben Sie den MySQL-Code in eigenen Dateien. Gibt es da ein Problem mit der Integration in den Quellcode in JS?

Viele Grüße,
Markus Alpers